name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Linting Job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./starter/frontend

      - name: Run lint
        run: npm run lint
        working-directory: ./starter/frontend

  # Testing Job
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./starter/frontend

      - name: Run tests
        run: npm run test
        working-directory: ./starter/frontend

  # Build and Deploy Job
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
         version: 'v1.27.0' # default is latest stable
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: frontend
            IMAGE_TAG: ${{ github.sha }}
            REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
        run: |
         docker build --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
         docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        working-directory: ./starter/frontend

      - name: Substitute variables in deployment.yaml
        env:
          CONTAINER_NAME: frontend
          IMAGE_NAME: ${{ steps.login-ecr.outputs.registry }}/frontend:${{ github.sha }}
        run: |
          envsubst < ./starter/frontend/k8s/deployment.yaml > ./starter/frontend/k8s/deployment-subst.yaml

      - name: Update kube config
        run: aws eks update-kubeconfig --name cluster
        working-directory: ./starter/frontend

      - name: Deploy to EKS
        run: |
         kubectl apply -f deployment-subst.yaml
         kubectl apply -f service.yaml
        working-directory: ./starter/frontend/k8s/

      